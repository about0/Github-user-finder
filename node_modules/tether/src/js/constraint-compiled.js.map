{"version":3,"sources":["constraint.js"],"names":[],"mappings":"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","file":"constraint-compiled.js","sourcesContent":["/* globals TetherBase */\n\nconst {\n  getBounds,\n  extend,\n  updateClasses,\n  defer\n} = TetherBase.Utils;\n\nconst BOUNDS_FORMAT = ['left', 'top', 'right', 'bottom'];\n\nfunction getBoundingRect(tether, to) {\n  if (to === 'scrollParent') {\n    to = tether.scrollParent;\n  } else if (to === 'window') {\n    to = [pageXOffset, pageYOffset, innerWidth + pageXOffset, innerHeight + pageYOffset];\n  }\n\n  if (to === document) {\n    to = to.documentElement;\n  }\n\n  if (typeof to.nodeType !== 'undefined') {\n    const size = getBounds(to);\n    const pos = size;\n    const style = getComputedStyle(to);\n\n    to = [pos.left, pos.top, size.width + pos.left, size.height + pos.top];\n\n    BOUNDS_FORMAT.forEach((side, i) => {\n      side = side[0].toUpperCase() + side.substr(1);\n      if (side === 'Top' || side === 'Left') {\n        to[i] += parseFloat(style[`border${ side }Width`]);\n      } else {\n        to[i] -= parseFloat(style[`border${ side }Width`]);\n      }\n    });\n  }\n\n  return to;\n}\n\nTetherBase.modules.push({\n  position({top, left, targetAttachment}) {\n    if (!this.options.constraints) {\n      return true;\n    }\n\n    let {height, width} = this.cache('element-bounds', () => {\n      return getBounds(this.element);\n    });\n\n    if (width === 0 && height === 0 && typeof this.lastSize !== 'undefined') {\n      // Handle the item getting hidden as a result of our positioning without glitching\n      // the classes in and out\n      ({width, height} = this.lastSize);\n    }\n\n    const targetSize = this.cache('target-bounds', () => {\n      return this.getTargetBounds();\n    });\n\n    const {height: targetHeight, width: targetWidth} = targetSize;\n\n    const allClasses = [this.getClass('pinned'), this.getClass('out-of-bounds')];\n\n    this.options.constraints.forEach(constraint => {\n      const {outOfBoundsClass, pinnedClass} = constraint;\n      if (outOfBoundsClass) {\n        allClasses.push(outOfBoundsClass);\n      }\n      if (pinnedClass) {\n        allClasses.push(pinnedClass);\n      }\n    });\n\n    allClasses.forEach(cls => {\n      ['left', 'top', 'right', 'bottom'].forEach(side => {\n        allClasses.push(`${ cls }-${ side }`);\n      });\n    });\n\n    const addClasses = [];\n\n    const tAttachment = extend({}, targetAttachment);\n    const eAttachment = extend({}, this.attachment);\n\n    this.options.constraints.forEach(constraint => {\n      let {to, attachment, pin} = constraint;\n\n      if (typeof attachment === 'undefined') {\n        attachment = '';\n      }\n\n      let changeAttachX, changeAttachY;\n      if (attachment.indexOf(' ') >= 0) {\n        [changeAttachY, changeAttachX] = attachment.split(' ');\n      } else {\n        changeAttachX = changeAttachY = attachment;\n      }\n\n      const bounds = getBoundingRect(this, to);\n\n      if (changeAttachY === 'target' || changeAttachY === 'both') {\n        if (top < bounds[1] && tAttachment.top === 'top') {\n          top += targetHeight;\n          tAttachment.top = 'bottom';\n        }\n\n        if (top + height > bounds[3] && tAttachment.top === 'bottom') {\n          top -= targetHeight;\n          tAttachment.top = 'top';\n        }\n      }\n\n      if (changeAttachY === 'together') {\n        if (top < bounds[1] && tAttachment.top === 'top') {\n          if (eAttachment.top === 'bottom') {\n            top += targetHeight;\n            tAttachment.top = 'bottom';\n\n            top += height;\n            eAttachment.top = 'top';\n\n          } else if (eAttachment.top === 'top') {\n            top += targetHeight;\n            tAttachment.top = 'bottom';\n\n            top -= height;\n            eAttachment.top = 'bottom';\n          }\n        }\n\n        if (top + height > bounds[3] && tAttachment.top === 'bottom') {\n          if (eAttachment.top === 'top') {\n            top -= targetHeight;\n            tAttachment.top = 'top';\n\n            top -= height;\n            eAttachment.top = 'bottom';\n\n          } else if (eAttachment.top === 'bottom') {\n            top -= targetHeight;\n            tAttachment.top = 'top';\n\n            top += height;\n            eAttachment.top = 'top';\n          }\n        }\n\n        if (tAttachment.top === 'middle') {\n          if (top + height > bounds[3] && eAttachment.top === 'top') {\n            top -= height;\n            eAttachment.top = 'bottom';\n\n          } else if (top < bounds[1] && eAttachment.top === 'bottom') {\n            top += height;\n            eAttachment.top = 'top';\n          }\n        }\n      }\n\n      if (changeAttachX === 'target' || changeAttachX === 'both') {\n        if (left < bounds[0] && tAttachment.left === 'left') {\n          left += targetWidth;\n          tAttachment.left = 'right';\n        }\n\n        if (left + width > bounds[2] && tAttachment.left === 'right') {\n          left -= targetWidth;\n          tAttachment.left = 'left';\n        }\n      }\n\n      if (changeAttachX === 'together') {\n        if (left < bounds[0] && tAttachment.left === 'left') {\n          if (eAttachment.left === 'right') {\n            left += targetWidth;\n            tAttachment.left = 'right';\n\n            left += width;\n            eAttachment.left = 'left';\n\n          } else if (eAttachment.left === 'left') {\n            left += targetWidth;\n            tAttachment.left = 'right';\n\n            left -= width;\n            eAttachment.left = 'right';\n          }\n\n        } else if (left + width > bounds[2] && tAttachment.left === 'right') {\n          if (eAttachment.left === 'left') {\n            left -= targetWidth;\n            tAttachment.left = 'left';\n\n            left -= width;\n            eAttachment.left = 'right';\n\n          } else if (eAttachment.left === 'right') {\n            left -= targetWidth;\n            tAttachment.left = 'left';\n\n            left += width;\n            eAttachment.left = 'left';\n          }\n\n        } else if (tAttachment.left === 'center') {\n          if (left + width > bounds[2] && eAttachment.left === 'left') {\n            left -= width;\n            eAttachment.left = 'right';\n\n          } else if (left < bounds[0] && eAttachment.left === 'right') {\n            left += width;\n            eAttachment.left = 'left';\n          }\n        }\n      }\n\n      if (changeAttachY === 'element' || changeAttachY === 'both') {\n        if (top < bounds[1] && eAttachment.top === 'bottom') {\n          top += height;\n          eAttachment.top = 'top';\n        }\n\n        if (top + height > bounds[3] && eAttachment.top === 'top') {\n          top -= height;\n          eAttachment.top = 'bottom';\n        }\n      }\n\n      if (changeAttachX === 'element' || changeAttachX === 'both') {\n        if (left < bounds[0]) {\n          if (eAttachment.left === 'right') {\n            left += width;\n            eAttachment.left = 'left';\n          } else if (eAttachment.left === 'center') {\n            left += (width / 2);\n            eAttachment.left = 'left';\n          }\n        }\n\n        if (left + width > bounds[2]) {\n          if (eAttachment.left === 'left') {\n            left -= width;\n            eAttachment.left = 'right';\n          } else if (eAttachment.left === 'center') {\n            left -= (width / 2);\n            eAttachment.left = 'right';\n          }\n        }\n      }\n\n      if (typeof pin === 'string') {\n        pin = pin.split(',').map(p => p.trim());\n      } else if (pin === true) {\n        pin = ['top', 'left', 'right', 'bottom'];\n      }\n\n      pin = pin || [];\n\n      const pinned = [];\n      const oob = [];\n\n      if (top < bounds[1]) {\n        if (pin.indexOf('top') >= 0) {\n          top = bounds[1];\n          pinned.push('top');\n        } else {\n          oob.push('top');\n        }\n      }\n\n      if (top + height > bounds[3]) {\n        if (pin.indexOf('bottom') >= 0) {\n          top = bounds[3] - height;\n          pinned.push('bottom');\n        } else {\n          oob.push('bottom');\n        }\n      }\n\n      if (left < bounds[0]) {\n        if (pin.indexOf('left') >= 0) {\n          left = bounds[0];\n          pinned.push('left');\n        } else {\n          oob.push('left');\n        }\n      }\n\n      if (left + width > bounds[2]) {\n        if (pin.indexOf('right') >= 0) {\n          left = bounds[2] - width;\n          pinned.push('right');\n        } else {\n          oob.push('right');\n        }\n      }\n\n      if (pinned.length) {\n        let pinnedClass;\n        if (typeof this.options.pinnedClass !== 'undefined') {\n          pinnedClass = this.options.pinnedClass;\n        } else {\n          pinnedClass = this.getClass('pinned');\n        }\n\n        addClasses.push(pinnedClass);\n        pinned.forEach(side => {\n          addClasses.push(`${ pinnedClass }-${ side }`);\n        });\n      }\n\n      if (oob.length) {\n        let oobClass;\n        if (typeof this.options.outOfBoundsClass !== 'undefined') {\n          oobClass = this.options.outOfBoundsClass;\n        } else {\n          oobClass = this.getClass('out-of-bounds');\n        }\n\n        addClasses.push(oobClass);\n        oob.forEach(side => {\n          addClasses.push(`${ oobClass }-${ side }`);\n        });\n      }\n\n      if (pinned.indexOf('left') >= 0 || pinned.indexOf('right') >= 0) {\n        eAttachment.left = tAttachment.left = false;\n      }\n      if (pinned.indexOf('top') >= 0 || pinned.indexOf('bottom') >= 0) {\n        eAttachment.top = tAttachment.top = false;\n      }\n\n      if (tAttachment.top !== targetAttachment.top ||\n          tAttachment.left !== targetAttachment.left ||\n          eAttachment.top !== this.attachment.top ||\n          eAttachment.left !== this.attachment.left) {\n        this.updateAttachClasses(eAttachment, tAttachment);\n      }\n    });\n\n    defer(() => {\n      if (!(this.options.addTargetClasses === false)) {\n        updateClasses(this.target, addClasses, allClasses);\n      }\n      updateClasses(this.element, addClasses, allClasses);\n    });\n\n    return {top, left};\n  }\n});\n"]}