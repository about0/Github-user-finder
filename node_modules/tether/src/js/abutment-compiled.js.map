{"version":3,"sources":["abutment.js"],"names":[],"mappings":";;;;wBAE0C,UAAU,CAAC,KAAK;IAAnD,SAAS,qBAAT,SAAS;IAAE,aAAa,qBAAb,aAAa;IAAE,KAAK,qBAAL,KAAK;;AAEtC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC;AACtB,UAAQ,EAAA,kBAAC,IAAW,EAAE;;;QAAZ,GAAG,GAAJ,IAAW,CAAV,GAAG;QAAE,IAAI,GAAV,IAAW,CAAL,IAAI;;iBACO,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,YAAM;AACzD,aAAO,SAAS,CAAC,MAAK,OAAO,CAAC,CAAC;KAChC,CAAC;;QAFK,MAAM,UAAN,MAAM;QAAE,KAAK,UAAL,KAAK;;AAIpB,QAAM,SAAS,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;;AAEzC,QAAM,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC;AAC5B,QAAM,KAAK,GAAG,IAAI,GAAG,KAAK,CAAC;;AAE3B,QAAM,OAAO,GAAG,EAAE,CAAC;AACnB,QAAI,GAAG,IAAI,SAAS,CAAC,MAAM,IAAI,MAAM,IAAI,SAAS,CAAC,GAAG,EAAE;AACtD,OAAC,MAAM,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,UAAA,IAAI,EAAI;AAChC,YAAM,aAAa,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AACtC,YAAI,aAAa,KAAK,IAAI,IAAI,aAAa,KAAK,KAAK,EAAE;AACrD,iBAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACpB;OACF,CAAC,CAAC;KACJ;;AAED,QAAI,IAAI,IAAI,SAAS,CAAC,KAAK,IAAI,KAAK,IAAI,SAAS,CAAC,IAAI,EAAE;AACtD,OAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAA,IAAI,EAAI;AAChC,YAAM,aAAa,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AACtC,YAAI,aAAa,KAAK,GAAG,IAAI,aAAa,KAAK,MAAM,EAAE;AACrD,iBAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACpB;OACF,CAAC,CAAC;KACJ;;AAED,QAAM,UAAU,GAAG,EAAE,CAAC;AACtB,QAAM,UAAU,GAAG,EAAE,CAAC;;AAEtB,QAAM,KAAK,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;AACjD,cAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;AAC1C,SAAK,CAAC,OAAO,CAAC,UAAA,IAAI,EAAI;AACpB,gBAAU,CAAC,IAAI,CAAK,MAAK,QAAQ,CAAC,SAAS,CAAC,SAAM,IAAI,CAAI,CAAC;KAC5D,CAAC,CAAC;;AAEH,QAAI,OAAO,CAAC,MAAM,EAAE;AAClB,gBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;KAC3C;;AAED,WAAO,CAAC,OAAO,CAAC,UAAA,IAAI,EAAI;AACtB,gBAAU,CAAC,IAAI,CAAK,MAAK,QAAQ,CAAC,SAAS,CAAC,SAAM,IAAI,CAAI,CAAC;KAC5D,CAAC,CAAC;;AAEH,SAAK,CAAC,YAAM;AACV,UAAI,EAAE,MAAK,OAAO,CAAC,gBAAgB,KAAK,KAAK,CAAA,AAAC,EAAE;AAC9C,qBAAa,CAAC,MAAK,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;OACpD;AACD,mBAAa,CAAC,MAAK,OAAO,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;KACrD,CAAC,CAAC;;AAEH,WAAO,IAAI,CAAC;GACb;CACF,CAAC,CAAC","file":"abutment-compiled.js","sourcesContent":["/* globals TetherBase */\n\nconst {getBounds, updateClasses, defer} = TetherBase.Utils;\n\nTetherBase.modules.push({\n  position({top, left}) {\n    const {height, width} = this.cache('element-bounds', () => {\n      return getBounds(this.element);\n    });\n\n    const targetPos = this.getTargetBounds();\n\n    const bottom = top + height;\n    const right = left + width;\n\n    const abutted = [];\n    if (top <= targetPos.bottom && bottom >= targetPos.top) {\n      ['left', 'right'].forEach(side => {\n        const targetPosSide = targetPos[side];\n        if (targetPosSide === left || targetPosSide === right) {\n          abutted.push(side);\n        }\n      });\n    }\n\n    if (left <= targetPos.right && right >= targetPos.left) {\n      ['top', 'bottom'].forEach(side => {\n        const targetPosSide = targetPos[side];\n        if (targetPosSide === top || targetPosSide === bottom) {\n          abutted.push(side);\n        }\n      });\n    }\n\n    const allClasses = [];\n    const addClasses = [];\n\n    const sides = ['left', 'top', 'right', 'bottom'];\n    allClasses.push(this.getClass('abutted'));\n    sides.forEach(side => {\n      allClasses.push(`${ this.getClass('abutted') }-${ side }`);\n    });\n\n    if (abutted.length) {\n      addClasses.push(this.getClass('abutted'));\n    }\n\n    abutted.forEach(side => {\n      addClasses.push(`${ this.getClass('abutted') }-${ side }`);\n    });\n\n    defer(() => {\n      if (!(this.options.addTargetClasses === false)) {\n        updateClasses(this.target, addClasses, allClasses);\n      }\n      updateClasses(this.element, addClasses, allClasses);\n    });\n\n    return true;\n  }\n});\n"]}