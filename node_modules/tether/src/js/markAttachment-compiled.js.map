{"version":3,"sources":["markAttachment.js"],"names":[],"mappings":";;;;AAEA,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;AAClB,YAAU,EAAA,sBAAG;;;AACX,QAAI,CAAC,OAAO,GAAG,EAAE,CAAC;;AAElB,KAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,OAAO,CAAC,UAAA,IAAI,EAAI;AACpC,UAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACzC,QAAE,CAAC,SAAS,GAAG,MAAK,QAAQ,CAAK,IAAI,aAAW,CAAC;;AAEjD,UAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC1C,SAAG,CAAC,SAAS,GAAG,MAAK,QAAQ,CAAC,YAAY,CAAC,CAAC;AAC5C,QAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;;AAEpB,YAAK,IAAI,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;;AAE3B,YAAK,OAAO,CAAC,IAAI,CAAC,GAAG,EAAC,GAAG,EAAH,GAAG,EAAE,EAAE,EAAF,EAAE,EAAC,CAAC;KAChC,CAAC,CAAC;GACJ;;AAED,UAAQ,EAAA,kBAAC,IAAkC,EAAE;QAAnC,YAAY,GAAb,IAAkC,CAAjC,YAAY;QAAE,kBAAkB,GAAjC,IAAkC,CAAnB,kBAAkB;;AACxC,QAAM,OAAO,GAAG;AACd,aAAO,EAAE,YAAY;AACrB,YAAM,EAAE,kBAAkB;KAC3B,CAAC;;AAEF,SAAK,IAAI,IAAI,IAAI,OAAO,EAAE;AACxB,UAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AAC7B,WAAK,IAAI,IAAI,IAAI,MAAM,EAAE;AACvB,YAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AACvB,YAAM,SAAS,GAAG,OAAO,GAAG,KAAK,QAAQ,CAAC;AAC1C,YAAI,SAAS,IACT,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IACvB,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AAC5B,aAAG,IAAI,IAAI,CAAC;SACb;;AAED,YAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE;AAC9C,cAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;SAC1C;OACF;KACF;;AAED,WAAO,IAAI,CAAC;GACb;CACF,CAAC,CAAC","file":"markAttachment-compiled.js","sourcesContent":["/* globals Tether */\n\nTether.modules.push({\n  initialize() {\n    this.markers = {};\n\n    ['target', 'element'].forEach(type => {\n      const el = document.createElement('div');\n      el.className = this.getClass(`${ type }-marker`);\n\n      const dot = document.createElement('div');\n      dot.className = this.getClass('marker-dot');\n      el.appendChild(dot);\n\n      this[type].appendChild(el);\n\n      this.markers[type] = {dot, el};\n    });\n  },\n\n  position({manualOffset, manualTargetOffset}) {\n    const offsets = {\n      element: manualOffset,\n      target: manualTargetOffset\n    };\n\n    for (let type in offsets) {\n      const offset = offsets[type];\n      for (let side in offset) {\n        let val = offset[side];\n        const notString = typeof val !== 'string';\n        if (notString ||\n            val.indexOf('%') === -1 &&\n            val.indexOf('px') === -1) {\n          val += 'px';\n        }\n\n        if (this.markers[type].dot.style[side] !== val) {\n          this.markers[type].dot.style[side] = val;\n        }\n      }\n    }\n\n    return true;\n  }\n});\n"]}