{"version":3,"sources":["defaultDisplay.js"],"names":[],"mappings":";;AAAA,MAAM,CAAE,CACP,SAAS,EACT,iBAAiB,EACjB,iBAAiB;CACjB,EAAE,UAAU,MAAM,EAAE,QAAQ,EAAG;;AAEhC,KAAI,MAAM;KACT,WAAW,GAAG;;;;AAIb,MAAI,EAAE,OAAO;AACb,MAAI,EAAE,OAAO;EACb,CAAC;;;;;;;;;AASH,UAAS,aAAa,CAAE,IAAI,EAAE,GAAG,EAAG;AACnC,MAAI,IAAI,GAAG,MAAM,CAAE,GAAG,CAAC,aAAa,CAAE,IAAI,CAAE,CAAE,CAAC,QAAQ,CAAE,GAAG,CAAC,IAAI,CAAE;MAElE,OAAO,GAAG,MAAM,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC,CAAE,EAAE,SAAS,CAAE,CAAC;;;;AAI9C,MAAI,CAAC,MAAM,EAAE,CAAC;;AAEd,SAAO,OAAO,CAAC;EACf;;;;;;AAMD,UAAS,cAAc,CAAE,QAAQ,EAAG;AACnC,MAAI,GAAG,GAAG,QAAQ;MACjB,OAAO,GAAG,WAAW,CAAE,QAAQ,CAAE,CAAC;;AAEnC,MAAK,CAAC,OAAO,EAAG;AACf,UAAO,GAAG,aAAa,CAAE,QAAQ,EAAE,GAAG,CAAE,CAAC;;;AAGzC,OAAK,OAAO,KAAK,MAAM,IAAI,CAAC,OAAO,EAAG;;;AAGrC,UAAM,GAAG,CAAE,MAAM,IAAI,MAAM,CAAE,gDAAgD,CAAE,CAAA,CAC7E,QAAQ,CAAE,GAAG,CAAC,eAAe,CAAE,CAAC;;;AAGlC,OAAG,GAAG,MAAM,CAAE,CAAC,CAAE,CAAC,eAAe,CAAC;;;AAGlC,OAAG,CAAC,KAAK,EAAE,CAAC;AACZ,OAAG,CAAC,KAAK,EAAE,CAAC;;AAEZ,WAAO,GAAG,aAAa,CAAE,QAAQ,EAAE,GAAG,CAAE,CAAC;AACzC,UAAM,CAAC,MAAM,EAAE,CAAC;IAChB;;;AAGD,cAAW,CAAE,QAAQ,CAAE,GAAG,OAAO,CAAC;GAClC;;AAED,SAAO,OAAO,CAAC;EACf;;AAED,QAAO,cAAc,CAAC;CACrB,CAAE,CAAC","file":"defaultDisplay-compiled.js","sourcesContent":["define( [\n\t\"../core\",\n\t\"../var/document\",\n\t\"../manipulation\" // appendTo\n], function( jQuery, document ) {\n\nvar iframe,\n\telemdisplay = {\n\n\t\t// Support: Firefox\n\t\t// We have to pre-define these values for FF (#10227)\n\t\tHTML: \"block\",\n\t\tBODY: \"block\"\n\t};\n\n/**\n * Retrieve the actual display of a element\n * @param {String} name nodeName of the element\n * @param {Object} doc Document object\n */\n\n// Called only from within defaultDisplay\nfunction actualDisplay( name, doc ) {\n\tvar elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n\n\t\tdisplay = jQuery.css( elem[ 0 ], \"display\" );\n\n\t// We don't have any data stored on the element,\n\t// so use \"detach\" method as fast way to get rid of the element\n\telem.detach();\n\n\treturn display;\n}\n\n/**\n * Try to determine the default display value of an element\n * @param {String} nodeName\n */\nfunction defaultDisplay( nodeName ) {\n\tvar doc = document,\n\t\tdisplay = elemdisplay[ nodeName ];\n\n\tif ( !display ) {\n\t\tdisplay = actualDisplay( nodeName, doc );\n\n\t\t// If the simple way fails, read from inside an iframe\n\t\tif ( display === \"none\" || !display ) {\n\n\t\t\t// Use the already-created iframe if possible\n\t\t\tiframe = ( iframe || jQuery( \"<iframe frameborder='0' width='0' height='0'/>\" ) )\n\t\t\t\t.appendTo( doc.documentElement );\n\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\t\t\tdoc = iframe[ 0 ].contentDocument;\n\n\t\t\t// Support: IE\n\t\t\tdoc.write();\n\t\t\tdoc.close();\n\n\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\t\tiframe.detach();\n\t\t}\n\n\t\t// Store the correct default display\n\t\telemdisplay[ nodeName ] = display;\n\t}\n\n\treturn display;\n}\n\nreturn defaultDisplay;\n} );\n"]}