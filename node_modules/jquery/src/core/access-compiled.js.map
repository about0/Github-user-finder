{"version":3,"sources":["access.js"],"names":[],"mappings":";;AAAA,MAAM,CAAE,CACP,SAAS,CACT,EAAE,UAAU,MAAM,EAAG;;;;AAItB,KAAI,MAAM,GAAG,SAAT,MAAM,CAAa,KAAK,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,EAAG;AACxE,MAAI,CAAC,GAAG,CAAC;MACR,GAAG,GAAG,KAAK,CAAC,MAAM;MAClB,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC;;;AAGpB,MAAK,MAAM,CAAC,IAAI,CAAE,GAAG,CAAE,KAAK,QAAQ,EAAG;AACtC,YAAS,GAAG,IAAI,CAAC;AACjB,QAAM,CAAC,IAAI,GAAG,EAAG;AAChB,UAAM,CAAE,KAAK,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,CAAE,CAAC,CAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,CAAE,CAAC;IACtD;;;GAGD,MAAM,IAAK,KAAK,KAAK,SAAS,EAAG;AACjC,aAAS,GAAG,IAAI,CAAC;;AAEjB,QAAK,CAAC,MAAM,CAAC,UAAU,CAAE,KAAK,CAAE,EAAG;AAClC,QAAG,GAAG,IAAI,CAAC;KACX;;AAED,QAAK,IAAI,EAAG;;;AAGX,SAAK,GAAG,EAAG;AACV,QAAE,CAAC,IAAI,CAAE,KAAK,EAAE,KAAK,CAAE,CAAC;AACxB,QAAE,GAAG,IAAI,CAAC;;;MAGV,MAAM;AACN,WAAI,GAAG,EAAE,CAAC;AACV,SAAE,GAAG,UAAU,IAAI,EAAE,GAAG,EAAE,KAAK,EAAG;AACjC,eAAO,IAAI,CAAC,IAAI,CAAE,MAAM,CAAE,IAAI,CAAE,EAAE,KAAK,CAAE,CAAC;QAC1C,CAAC;OACF;KACD;;AAED,QAAK,EAAE,EAAG;AACT,YAAQ,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAG;AACtB,QAAE,CACD,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,EAAE,GAAG,GACpB,KAAK,GACL,KAAK,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,CAAC,EAAE,EAAE,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,CAAE,CAAE,CAClD,CAAC;MACF;KACD;IACD;;AAED,SAAO,SAAS,GACf,KAAK;;;AAGL,MAAI,GACH,EAAE,CAAC,IAAI,CAAE,KAAK,CAAE,GAChB,GAAG,GAAG,EAAE,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,CAAE,GAAG,QAAQ,CAAC;EACzC,CAAC;;AAEF,QAAO,MAAM,CAAC;CAEb,CAAE,CAAC","file":"access-compiled.js","sourcesContent":["define( [\n\t\"../core\"\n], function( jQuery ) {\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn chainable ?\n\t\telems :\n\n\t\t// Gets\n\t\tbulk ?\n\t\t\tfn.call( elems ) :\n\t\t\tlen ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\nreturn access;\n\n} );\n"]}